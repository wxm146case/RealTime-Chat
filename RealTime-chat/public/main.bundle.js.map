{"version":3,"sources":["/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/$_lazy_route_resource lazy","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.module.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.routes.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/models/action.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth-guard.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/socket.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/environments/environment.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-content {\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.button-row {\\n  right: 0;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <mat-toolbar color = \\\"primary\\\">\\n    <span>HappyHour</span>\\n    <div class=\\\"button-row\\\" *ngIf='AuthService.isUserAuthenticated()'>\\n        <button mat-button>{{AuthService.getEmail()}}</button>\\n        <button mat-button><a href=\\\"/logout\\\">Log out</a></button>\\n    </div>\\n    <div class=\\\"button-row\\\" *ngIf='!AuthService.isUserAuthenticated()'>\\n        <button mat-button><a href=\\\"/login\\\">Log in</a></button>\\n        <button mat-button><a href=\\\"/signup\\\">Sign up</a></button>\\n    </div>\\n  </mat-toolbar>\\n\\n  <div class=\\\"app-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(public AuthService : AuthService) { }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSidenavModule} from '@angular/material/sidenav';\n\n\nimport { AppComponent } from './app.component';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { SocketService } from './service/socket.service'\nimport { routing } from './app.routes';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignComponent } from './components/sign/sign.component';\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { AuthService } from './service/auth.service';\nimport { HttpModule } from '@angular/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatroomComponent,\n    LoginComponent,\n    SignComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    routing,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatSidenavModule,\n    HttpModule\n  ],\n  providers: [SocketService, AuthGuardService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { Routes,CanActivate, RouterModule } from '@angular/router';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignComponent } from './components/sign/sign.component';\nimport { AuthGuardService as AuthGuard } from './service/auth-guard.service';\n\nconst routes: Routes = [\n    {\n        path:'',\n        redirectTo:'chatroom',\n        pathMatch:'full'\n    },\n    {\n        path:'chatroom',\n        component : ChatroomComponent, canActivate:[ AuthGuard ]\n    },\n    {\n        path: 'Login', \n        component : LoginComponent\n      },\n      {\n        path: 'Signup', \n        component : SignComponent\n      },\n      {\n        path: '**', \n        redirectTo: 'chatroom'\n      }\n    ];\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[mat-fab] {\\n    \\n    right: 20%;\\n    z-index: 1;\\n}\\n\\n.main-card {\\n    height: 100%;  \\n}\\n\\n.chat-list {\\n    overflow: auto;\\n    position: fixed;\\n    top: 90px;\\n    left: 25px;\\n    right: 25px;\\n    bottom: 120px;\\n}\\n\\n.chat-container {\\n    position: fixed;\\n    width: 100%; \\n    height: 100%;  \\n}\\n\\n.chat-list-item {\\n    margin-top: 2px;\\n    margin-bottom: 2px;\\n    border-radius: 5px;\\n    background-color: #E8EAF6;\\n}\\n\\n.chat-input {\\n    padding-top: 20px;\\n    width: 80%; \\n}\\n\\n.chat-footer-container {\\n    position:fixed;\\n    bottom:25px;\\n    left:25px;\\n    right:25px;\\n}\\n\\nmat-sidenav {\\n    width: 200px;\\n    height: 100%;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.css\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container>\\n    <mat-sidenav #sidenav>\\n        <mat-list>\\n            <mat-list-item *ngFor = \\\"let user of users\\\">\\n                <h3 matline>{{user}}</h3>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-sidenav>\\n  \\n<button mat-fab (click)=\\\"sidenav.toggle()\\\">\\n    <mat-icon>person</mat-icon>\\n</button>\\n<div class = 'chat-container'>\\n  <mat-card-content class=\\\"main-card\\\">\\n      <mat-list class=\\\"chat-list\\\">\\n            <mat-list-item *ngFor = \\\"let notice of notices \\\" Class=\\\"chat-list-item\\\">                   \\n                    <h5 matLine> \\n                      <b>{{notice}}</b>\\n                    </h5>                   \\n            </mat-list-item>\\n            <mat-list-item *ngFor = \\\"let message of messages \\\" [ngClass]=\\\"[(message.action === null && message.from.id === user.id)? 'chat-list-item': '']\\\">\\n              <img matListAvatar *ngIf=\\\"message.action === null\\\" [src]=\\\"message.from.avatar\\\">\\n              <h4 matLine> \\n                <b>{{message.from.name}}</b>\\n              </h4>\\n              <p matLine *ngIf='message.action === null'>\\n                  <span> {{message.content}} </span>                  \\n              </p>\\n              <p md-line *ngIf=\\\"message.action === action.JOINED\\\" class=\\\"chat-notification\\\">\\n                  <span> <b>{{message.from.name}}</b> joined to the conversation. </span>\\n              </p>\\n            </mat-list-item>\\n      </mat-list>\\n      <div class=\\\"chat-footer-container\\\">\\n          <mat-icon>message</mat-icon>\\n          <mat-form-field class = 'chat-input'>\\n              <input matInput \\n                placeholder=\\\"Type your message\\\"\\n                [(ngModel)] = \\\"messageContent\\\"\\n                (keyup.enter) = \\\"sendMessage(messageContent)\\\">\\n          </mat-form-field>\\n      </div>\\n  </mat-card-content>\\n</div>\\n</mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.html\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { SocketService } from '../../service/socket.service';\nimport { Action } from '../../models/action';\nimport { Message } from '../../models/message.model';\nimport { User } from '../../models/user.model';\n\nconst AVATAR_URL = 'https://api.adorable.io/avatars/285';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit {\n  action = Action;\n  user : User;\n  users : string[];\n  userName :string = null;\n  messages: Message[] = [];\n  messageContent: string;\n  notices : string[] = [];\n  ioConnection: any;\n\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit() {\n    this.initIoConnection();\n  }\n\n  private initModel(): void {\n    const randomId = this.getRandomId(); \n    this.user = {\n      id: randomId,\n      avatar: `${AVATAR_URL}/${randomId}.png`,\n      name: this.userName,\n    };\n  }\n\n\n  private initIoConnection(): void {\n    this.socketService.init();\n\n    this.ioConnection  = this.socketService.onMessage()\n      .subscribe((message: Message) => {\n        this.messages.push(message);\n      });\n\n    this.socketService.onUserslist()\n      .subscribe((usersList : string[]) => {\n        this.users = usersList;\n      });\n\n    this.socketService.getName()\n      .subscribe((name : string) => {\n        this.userName = name;\n        this.initModel();\n      });\n    \n    this.socketService.addUser()\n      .subscribe((name : string) => {\n        this.users.push(name);\n        this.notices.push(name + ' joined');\n      });\n\n    this.socketService.loseUser()\n      .subscribe((name : string) => {\n        this.notices.push(name + ' left');\n        var index = this.users.indexOf(name);\n        this.users.splice(index, 1);\n      });\n\n    this.socketService.onConnect()\n      .subscribe(() => {\n        console.log('onConnect');\n      });\n\n    this.socketService.onDisconnect()\n      .subscribe(() => {\n        console.log('onDisconnect');\n      });\n  }\n\n  private getRandomId(): number {\n    return Math.floor(Math.random() * (1000000)) + 1;\n  }\n\n  public sendMessage(message: string): void {\n    if (!message) {\n      return;\n    }\n    let senddata : Message = {\n      from: this.user,\n      content: message,\n      action: null\n    }\n    this.socketService.send(senddata);\n    this.messages.push(senddata);\n    \n    this.messageContent = null;\n    }\n\n    public sendNotification(params: any, action: Action): void {\n      let message: Message;\n  \n      if (action === Action.JOINED) {\n        message = {\n          from: this.user,\n          content : null,\n          action: action\n        }\n      }   \n      this.socketService.send(message);\n    }\n\n  }\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row hor_space_100\\\">\\n    <div class=\\\"col-lg-6\\\"></div>\\n    <div class=\\\"col-lg-6\\\">     \\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">\\n              Login\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.summary !== null\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"sr-only\\\">Error:</span>\\n            {{errors.summary}}\\n          </div>          \\n          <div class=\\\"panel-body\\\">\\n            <form\\n              novalidate\\n              action =\\\"/\\\"\\n              (ngSubmit)=\\\"processForm()\\\"\\n              #loginForm=\\\"ngForm\\\">\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (emVar.touched || emVar.dirty) && !emVar.valid}\\\">\\n                <label for=\\\"email\\\">Email Address</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.email !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.email}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"email\\\"\\n                        id=\\\"email\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                      \\n                        placeholder=\\\"Email (Required)\\\"\\n                        [(ngModel)]=\\\"user.email\\\"\\n                        #emVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(emVar.touched || emVar.dirty) && emVar.errors\\\">\\n                          <span *ngIf=\\\"emVar.errors.required\\\">\\n                            Please enter your email\\n                          </span>\\n                          \\n                          <span *ngIf=\\\"emVar.errors.pattern\\\">\\n                            Please enter a valid email address\\n                          </span>\\n                        </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error': (pw1Var.touched || pw1Var.dirty) && !pw1Var.valid}\\\">\\n                <label for=\\\"passowrd\\\">Password</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.password !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.password}}\\n                </div> \\n                <input type=\\\"password\\\"\\n                        id=\\\"password\\\"\\n                        name=\\\"password\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Password (Required)\\\"\\n                        [(ngModel)]=\\\"user.password\\\"\\n                        #pw1Var=\\\"ngModel\\\"/>\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(pw1Var.touched || pw1Var.dirty) && pw1Var.errors\\\">\\n                          Please enter your password\\n                        </span>\\n                </div>\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\">Keep me logged in.\\n                </label>\\n              </div>             \\n              <div class=\\\"form-group\\\">\\n               <span>\\n               <button type=\\\"sumit\\\"\\n                       class=\\\"btn btn-success btn_narrow\\\"\\n                       [disabled]=\\\"!loginForm.valid\\\"\\n                       >Login</button> \\n               <button type=\\\"button\\\"\\n                       class=\\\"btn btn-default btn_narrow\\\"\\n                       (click)=\\\"cancel()\\\">Cancel</button>\\n              </span>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            Not Registerd? <a [routerLink]=\\\"['/register']\\\" href=\\\"\\\">Register Here</a><br>             \\n          </div>\\n        </div>\\n      </div>  \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Http, Response, Headers } from \"@angular/http\";\nimport { AuthService } from \"../../service/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user = {\n    email: '',\n    password : ''\n  };\n\n  errors = {\n    summary: null,\n    email : null,\n    password: null\n  }\n\n  constructor(private router: Router,\n              private http: Http,\n              private AuthService: AuthService) { }\n\n  processForm() {\n\n    const email = this.user.email;\n    const password = this.user.password;\n\n    console.log('email:', email);\n    console.log('password', password);\n\n    const headers = new Headers( {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    });\n\n    this.http.post('/localhost:3000/auth/login', {\n      email : this.user.email,\n      password : this.user.password\n    }, {headers: headers}).toPromise()\n                .then(response => {\n                  if (response.status === 200) {\n                    this.errors = {\n                      summary: null,\n                      email : null,\n                      password: null\n                    }\n                    response.json().then(json => {\n                      console.log(json);\n                      this.AuthService.authenticateUser(json.token, email, json.displayName);\n                      this.router.navigate(['']);\n                    });\n                  } else {\n                    console.log('Login failed.');\n                    response.json().then(json => {\n                      const errors = json.errors ? json.errors : {};\n                      errors.summary = json.message;\n                    });\n                  }\n                });\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.css\n// module id = ../../../../../src/app/components/sign/sign.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row hor_space_100\\\">\\n    <div class=\\\"col-md-6\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">\\n            Register New User\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.summary !== null\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"sr-only\\\">Error:</span>\\n            {{errors.summary}}\\n          </div> \\n          <div class=\\\"panel-body\\\">\\n            <form\\n              novalidate\\n              (ngSubmit)=\\\"processForm()\\\"\\n              #registerForm=\\\"ngForm\\\">\\n              \\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (emVar.touched || emVar.dirty) && !emVar.valid}\\\">\\n                <label for=\\\"email\\\">Email Address</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.email !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.email}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"email\\\"\\n                        id=\\\"email\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                      \\n                        placeholder=\\\"Email (Required)\\\"\\n                        [(ngModel)]=\\\"user.email\\\"\\n                        #emVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(emVar.touched || emVar.dirty) && emVar.errors\\\">\\n                          <span *ngIf=\\\"emVar.errors.required\\\">\\n                            A email address is required\\n                          </span>\\n                          \\n                          <span *ngIf=\\\"emVar.errors.pattern\\\">\\n                            Please enter a valid email address\\n                          </span>\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (disNameVar.touched || disNameVar.dirty) && !disNameVar.valid}\\\">\\n                <label for=\\\"disName\\\">Display Name</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.displayName !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.displayName}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"disName\\\"\\n                        id=\\\"disName\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Display Name (Required)\\\"\\n                        [(ngModel)]=\\\"user.displayName\\\"\\n                        #disNameVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(disNameVar.touched || disNameVar.dirty) && disNameVar.errors\\\">\\n                          A display name is required\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (pw1Var.touched || pw1Var.dirty) && !pw1Var.valid}\\\">\\n                <label for=\\\"password1\\\">Password</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.password !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.password}}\\n                </div>\\n                <input type=\\\"password\\\"\\n                        id=\\\"password1\\\"\\n                        name=\\\"password1\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Password (Required)\\\"\\n                        [(ngModel)]=\\\"user.password\\\"\\n                        #pw1Var=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(pw1Var.touched || pw1Var.dirty) && pw1Var.errors\\\">\\n                          A password is required\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (pw2Var.touched || pw2Var.dirty) && !pw2Var.valid}\\\">\\n                <label for=\\\"confirm_password\\\">Confirm Password</label>\\n                <input type=\\\"password\\\"\\n                id=\\\"confirm_password\\\"\\n                name=\\\"confirm_password\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                placeholder=\\\"Confirm Password (Required)\\\"\\n                [(ngModel)]=\\\"user.confirm_password\\\"\\n                #pw2Var=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"(pw2Var.touched || pw2Var.dirty) && pw2Var.errors\\\">\\n                  Please confirm your password\\n                </span>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"user.password !== user.confirm_password\\\" class=\\\"alert alert-warning\\\">\\n                Passwords Do Not Match\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n              <span>\\n              <button type=\\\"submit\\\"\\n                     class=\\\"btn btn-success btn_narrow\\\"\\n                     [disabled]=\\\"!registerForm.valid\\\"\\n                     >Register</button> \\n               <button type=\\\"button\\\"\\n                     class=\\\"btn btn-default btn_narrow \\\"\\n                     (click)=\\\"cancel()\\\">Cancel</button>\\n              </span>\\n              </div>\\n\\n            </form>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            Register? <a [routerLink]=\\\"['']\\\" href=\\\"\\\">Login Here</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.html\n// module id = ../../../../../src/app/components/sign/sign.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Http, Response, Headers } from \"@angular/http\";\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\nexport class SignComponent implements OnInit {\n  user = {\n    email: '',\n    password : '',\n    confirm_password: '',\n    displayName : ''\n  };\n\n  errors = {\n    summary: null,\n    email : null,\n    displayName : null,\n    password: null\n  }\n\n  constructor(private router: Router, private http: Http) { }\n\n  processForm() {  \n        const email = this.user.email;\n        const password = this.user.password;\n        const confirm_password = this.user.confirm_password;\n        const displayName = this.user.displayName;\n    \n        console.log('email:', email);\n        console.log('password:', password);\n        console.log('confirm_password:', confirm_password);\n        console.log('displayName:', displayName);\n\n        if(password !== confirm_password) {\n          return;\n        }\n\n        const headers = new Headers( {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        });\n    \n        this.http.post('/localhost:3000/auth/signup', {\n          email : this.user.email,\n          password : this.user.password,\n          displayName : this.user.displayName\n        }, {headers: headers}).toPromise()\n                              .then(response => {\n                                if (response.status === 200) {\n                                  this.errors = {\n                                    summary: null,\n                                    email : null,\n                                    displayName : null,\n                                    password: null\n                                  }\n                                  this.router.navigate(['/login']);                                  \n                                } else {\n                                  console.log('Signup failed.');\n                                  response.json().then(json => {\n                                    console.log(json);\n                                    const errors = json.errors ? json.errors : {};\n                                    errors.summary = json.message;\n                                  });\n                                }\n                              });\n        }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.ts","export enum Action {\n    JOINED,\n    LEFT,\n    RENAME\n}\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/models/action.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth : AuthService, public router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.auth.isUserAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth-guard.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n  constructor() { }\n\n  public authenticateUser(token, email, displayName):void {\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n    localStorage.setItem('displayName', displayName);\n  }\n\n  public isUserAuthenticated(): boolean{\n    return localStorage.getItem('token') !== null;\n  }\n\n  public deauthenticateUser():void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('displayName');\n  }\n\n  public getToken():String {\n    return localStorage.getItem('token'); \n  }\n\n  public getEmail():String {\n    return localStorage.getItem('email');\n  }\n\n  public getDisplayName():String {\n    return localStorage.getItem('DisplayName');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Message } from '../models/message.model';\n\ndeclare var io : any;\n\nconst SERVER_URL = 'http://localhost:3000';\n\n@Injectable()\nexport class SocketService {\n  socket : any;\n  constructor() { }\n\n  public init(): void {\n    this.socket = io(SERVER_URL);\n  }\n\n\n  public send(message: Message):void {\n    this.socket.emit('message', message);\n  }\n\n\n\n  onUserslist(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('init', (usersList) => {\n        observer.next(usersList);\n      });\n    });\n  }\n\n  getName(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('myName', (name) => {\n        observer.next(name);\n      });\n    });\n  }\n\n  addUser(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('newUser', (name) => {\n        observer.next(name);\n      });\n    });\n  }\n\n  loseUser(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('loseUser', (name) => {\n        observer.next(name);\n      });\n    });\n  }\n  \n  onMessage(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n  public onConnect(): Observable<any> {\n    return new Observable(observer => {\n        this.socket.on('connect', () => observer.next());\n    });\n}\n\n  public onDisconnect(): Observable<any> {\n    return new Observable(observer => {\n        this.socket.on('disconnect', () => observer.next());\n    });\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/socket.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/main.ts"],"sourceRoot":"webpack:///"}