{"version":3,"sources":["/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/$_lazy_route_resource lazy","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.module.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.routes.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.css","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.html","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth-guard.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/socket.service.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/environments/environment.ts","/home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-content {\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.button-row {\\n  right: 0;\\n}\\n\\n.btn-group {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <mat-toolbar color = \\\"primary\\\">\\n    <span>HappyHour</span>\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-pressed=\\\"true\\\" aria-label=\\\"...\\\" *ngIf='AuthService.isUserAuthenticated()'>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">{{AuthService.getEmail()}}</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a href=\\\"/logout\\\">Log out</a></button>\\n    </div>\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-pressed=\\\"true\\\" aria-label=\\\"...\\\" *ngIf='!AuthService.isUserAuthenticated()'>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a href=\\\"/login\\\">Log in</a></button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><a href=\\\"/signup\\\">Sign up</a></button>\\n    </div>\\n  </mat-toolbar>\\n\\n  <div class=\\\"app-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './service/auth.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(public AuthService : AuthService,\n              private router: Router,) { }\n  \n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSidenavModule} from '@angular/material/sidenav';\n\n\nimport { AppComponent } from './app.component';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { SocketService } from './service/socket.service'\nimport { routing } from './app.routes';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignComponent } from './components/sign/sign.component';\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { AuthService } from './service/auth.service';\nimport { HttpModule } from '@angular/http';\nimport { LogoutComponent } from './components/logout/logout.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatroomComponent,\n    LoginComponent,\n    SignComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    routing,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatSidenavModule,\n    HttpModule\n  ],\n  providers: [SocketService, AuthGuardService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { Routes,CanActivate, RouterModule } from '@angular/router';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignComponent } from './components/sign/sign.component';\nimport { LogoutComponent} from './components/logout/logout.component';\nimport { AuthGuardService as AuthGuard } from './service/auth-guard.service';\n\nconst routes: Routes = [\n    {\n        path:'',\n        redirectTo:'chatroom',\n        pathMatch:'full'\n    },\n    {\n        path:'chatroom',\n        component : ChatroomComponent, canActivate:[ AuthGuard ]\n    },\n    {\n        path: 'login', \n        component : LoginComponent\n      },\n      {\n        path: 'signup', \n        component : SignComponent\n      },\n      {\n          path: 'logout',\n          component : LogoutComponent\n      },\n      {\n        path: '**', \n        redirectTo: 'chatroom'\n      }\n    ];\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/app.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[mat-fab] {\\n    \\n    right: 20%;\\n    z-index: 1;\\n}\\n\\n.delete {\\n    right: 0;\\n}\\n\\n.main-card {\\n    height: 100%;  \\n}\\n\\n.chat-list {\\n    overflow: auto;\\n    position: fixed;\\n    top: 90px;\\n    left: 25px;\\n    right: 25px;\\n    bottom: 120px;\\n}\\n\\n.chat-container {\\n    position: fixed;\\n    width: 100%; \\n    height: 100%;  \\n}\\n\\n.chat-list-item {\\n    margin-top: 2px;\\n    margin-bottom: 2px;\\n    border-radius: 5px;\\n    background-color: #E8EAF6;\\n}\\n\\n.chat-input {\\n    padding-top: 20px;\\n    width: 80%; \\n}\\n\\n.chat-footer-container {\\n    position:fixed;\\n    bottom:25px;\\n    left:25px;\\n    right:25px;\\n}\\n\\nmat-sidenav {\\n    width: 200px;\\n    height: 100%;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.css\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container>\\n    <mat-sidenav #sidenav>\\n        <mat-list>\\n            <mat-list-item *ngFor = \\\"let user of users\\\">\\n                <h3 matline>{{user}}</h3>\\n                <button class = 'delete' (click) = \\\"deleteUser(user)\\\" *ngIf='userRole === adminRole'>\\n                    <mat-icon>delete forever</mat-icon>\\n                </button>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-sidenav>\\n  \\n<button mat-fab (click)=\\\"sidenav.toggle()\\\">\\n    <mat-icon>person</mat-icon>\\n</button>\\n<div class = 'chat-container'>\\n  <mat-card-content class=\\\"main-card\\\">\\n      <mat-list class=\\\"chat-list\\\">\\n            <mat-list-item *ngFor = \\\"let notice of notices \\\" Class=\\\"chat-list-item\\\">                   \\n                    <h5 matLine> \\n                      <b>{{notice}}</b>\\n                    </h5>                   \\n            </mat-list-item>\\n            <mat-list-item *ngFor = \\\"let message of messages \\\" [ngClass]=\\\"[(message.from.id === user.id)? 'chat-list-item': '']\\\">\\n              <img matListAvatar  [src]=\\\"message.from.avatar\\\">\\n              <h4 matLine> \\n                <b>{{message.from.name}}</b>\\n              </h4>\\n              <p matLine >\\n                  <span> {{message.content}} </span>                  \\n              </p>\\n            </mat-list-item>\\n      </mat-list>\\n      <div class=\\\"chat-footer-container\\\">\\n          <mat-icon>message</mat-icon>\\n          <mat-form-field class = 'chat-input'>\\n              <input matInput \\n                placeholder=\\\"Type your message\\\"\\n                [(ngModel)] = \\\"messageContent\\\"\\n                (keyup.enter) = \\\"sendMessage(messageContent)\\\">\\n          </mat-form-field>\\n      </div>\\n  </mat-card-content>\\n</div>\\n</mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.html\n// module id = ../../../../../src/app/components/chatroom/chatroom.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService } from '../../service/auth.service'\nimport { SocketService } from '../../service/socket.service';\n\nimport { Message } from '../../models/message.model';\nimport { User } from '../../models/user.model';\nimport { Http, Response, Headers } from \"@angular/http\";\nimport { Router } from \"@angular/router\";\n\nconst AVATAR_URL = 'https://api.adorable.io/avatars/285';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit {\n  user : User;\n  users : String[] = [];\n  userName :String = null;\n  userRole : String = this.authService.getRole();\n  adminRole : String = 'admin';\n  messages: Message[] = [];\n  messageContent: string;\n  notices : string[] = [];\n  ioConnection: any;\n\n\n  constructor(private socketService: SocketService,\n              private http: Http, \n              private authService: AuthService,\n              private router : Router) { }\n\n  ngOnInit() {\n    const headers = new Headers( {\n      'authorization': 'bearer ' + this.authService.getToken(),\n    });\n    this.http.post('/chatroom', {'status' : 'logged'}, {headers: headers}).toPromise()\n                    .then((res) => {\n                      const json = res.json();\n                      console.log(json);\n                    }).catch((error: any) => {\n                      console.log(error);\n                    })\n    this.initIoConnection();\n  }\n\n  private initModel(): void {\n    const randomId = this.getRandomId();\n    this.userName = this.authService.getDisplayName();    \n    this.user = {\n      id: randomId,\n      avatar: `${AVATAR_URL}/${randomId}.png`,\n      name: this.userName,\n    };\n  }\n\n\n  private initIoConnection(): void {\n    this.initModel();\n    this.socketService.init(this.userName);\n\n    this.ioConnection  = this.socketService.onMessage()\n      .subscribe((message: Message) => {\n        this.messages.push(message);\n      });\n\n    this.socketService.onUserslist()\n      .subscribe((usersList : string[]) => {\n        this.users = usersList;\n        this.users.push(this.userName);\n        this.notices.push(this.userName + ' joined');\n      });\n    \n    this.socketService.newUser()\n      .subscribe((name : string) => {\n        this.users.push(name);\n        this.notices.push(name + ' joined');\n      });\n\n    this.socketService.loseUser()\n      .subscribe((name : string) => {\n        this.notices.push(name + ' left');\n        var index = this.users.indexOf(name);\n        this.users.splice(index, 1);\n      });\n\n    this.socketService.kickUser()\n      .subscribe((displayName : string) => {\n        this.notices.push('kick out ' + displayName);\n        var index = this.users.indexOf(displayName);\n        this.users.splice(index, 1);\n      });\n\n    this.socketService.onConnect()\n      .subscribe(() => {\n        console.log('onConnect');\n      });\n\n    this.socketService.onDisconnect()\n      .subscribe(() => {\n        console.log('onDisconnect');\n      });\n  }\n\n  private getRandomId(): number {\n    return Math.floor(Math.random() * (1000000)) + 1;\n  }\n\n  public sendMessage(message: string): void {\n    if (!message) {\n      return;\n    }\n    const headers = new Headers( {\n      'authorization': 'bearer ' + this.authService.getToken(),\n    });\n    \n    this.http.post('/chatroom', {'status' : 'logged'}, {headers: headers}).toPromise()\n    .then((res) => {\n      const json = res.json();\n      console.log(json);\n    }).catch((error: any) => {\n      console.log(error);\n    })\n\n    let senddata : Message = {\n      from: this.user,\n      content: message\n    }\n    this.socketService.send(senddata);\n    this.messages.push(senddata);\n    this.messageContent = null;\n    }\n\n    public deleteUser(displayName: string): void {\n      this.notices.push('kick out ' + displayName);\n      var index = this.users.indexOf(displayName);\n      this.users.splice(index, 1);\n      this.socketService.deleteUser(displayName);\n\n      const headers = new Headers( {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      });\n\n      this.http.post('/auth/delete', {displayName : displayName}, {headers: headers}).toPromise()\n      .then((res) => {\n        const json = res.json();\n        this.router.navigate(['/logout']); \n      }).catch((error: any) => {\n        console.log(error);\n      })\n    }\n  }\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/chatroom/chatroom.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container-fluid {\\n    margin-left: auto;\\n    margin-right: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row hor_space_100\\\">\\n    <div class=\\\"col-lg-8\\\"></div>\\n    <div class=\\\"col-lg-8\\\">     \\n      <div class=\\\"col-md-12 col-md-offset-3\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">\\n              Login\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.summary !== null\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"sr-only\\\">Error:</span>\\n            {{errors.summary}}\\n          </div>          \\n          <div class=\\\"panel-body\\\">\\n            <form\\n              novalidate\\n              action =\\\"/\\\"\\n              (ngSubmit)=\\\"processForm()\\\"\\n              #loginForm=\\\"ngForm\\\">\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (emVar.touched || emVar.dirty) && !emVar.valid}\\\">\\n                <label for=\\\"email\\\">Email Address</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.email !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.email}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"email\\\"\\n                        id=\\\"email\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                      \\n                        placeholder=\\\"Email (Required)\\\"\\n                        [(ngModel)]=\\\"user.email\\\"\\n                        #emVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(emVar.touched || emVar.dirty) && emVar.errors\\\">\\n                          <span *ngIf=\\\"emVar.errors.required\\\">\\n                            Please enter your email\\n                          </span>\\n                          \\n                          <span *ngIf=\\\"emVar.errors.pattern\\\">\\n                            Please enter a valid email address\\n                          </span>\\n                        </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error': (pw1Var.touched || pw1Var.dirty) && !pw1Var.valid}\\\">\\n                <label for=\\\"passowrd\\\">Password</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.password !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.password}}\\n                </div> \\n                <input type=\\\"password\\\"\\n                        id=\\\"password\\\"\\n                        name=\\\"password\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Password (Required)\\\"\\n                        [(ngModel)]=\\\"user.password\\\"\\n                        #pw1Var=\\\"ngModel\\\"/>\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(pw1Var.touched || pw1Var.dirty) && pw1Var.errors\\\">\\n                          Please enter your password\\n                        </span>\\n                </div>\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\">Keep me logged in.\\n                </label>\\n              </div>             \\n              <div class=\\\"form-group\\\">\\n               <span>\\n               <button type=\\\"submit\\\"\\n                       class=\\\"btn btn-success btn_narrow\\\"\\n                       [disabled]=\\\"!loginForm.valid\\\"\\n                       >Login</button> \\n               <button type=\\\"button\\\"\\n                       class=\\\"btn btn-default btn_narrow\\\"\\n                       (click)=\\\"cancel()\\\">Cancel</button>\\n              </span>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            Not Registerd? <a [routerLink]=\\\"['/signup']\\\" href=\\\"/signup\\\">Register Here</a><br>             \\n          </div>\\n        </div>\\n      </div>  \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Http, Response, Headers } from \"@angular/http\";\nimport { AuthService } from \"../../service/auth.service\";\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user = {\n    email: '',\n    password : ''\n  };\n\n  errors = {\n    summary: null,\n    email : null,\n    password: null\n  }\n\n\n  constructor(private router: Router,\n              private http: Http,\n              private AuthService: AuthService) { }\n\n  processForm() {\n    const email = this.user.email;\n    const password = this.user.password;\n    const headers = new Headers( {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    });\n    const body = {\n      email : this.user.email,\n      password : this.user.password\n    }\n\n    this.http.post('/auth/login', body, {headers: headers}).toPromise()\n                .then(response => {\n                  if (response.status === 200) {\n                    this.errors = {\n                      summary: null,\n                      email : null,\n                      password: null\n                    }\n                    const json = response.json();\n                    this.AuthService.authenticateUser(json.token, email, json.user.displayName, json.user.role);\n                    this.router.navigate(['']);                   \n                  } \n                }).catch((error:any) => {\n                  console.log('Login failed');\n                  const json = error.json();\n                  this.errors = {\n                    summary: json.message,\n                    email : null,\n                    password: null\n                  }\n                  console.log(error);\n                });\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.css\n// module id = ../../../../../src/app/components/logout/logout.component.css\n// module chunks = main","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.html\n// module id = ../../../../../src/app/components/logout/logout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../service/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router : Router) { }\n\n  ngOnInit() {\n    this.authService.deauthenticateUser();\n    this.router.navigate(['login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/logout/logout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.css\n// module id = ../../../../../src/app/components/sign/sign.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row hor_space_100\\\">\\n    <div class=\\\"col-md-8\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"col-md-8 col-md-offset-3\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">\\n            Register New User\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.summary !== null\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n            <span class=\\\"sr-only\\\">Error:</span>\\n            {{errors.summary}}\\n          </div> \\n          <div class=\\\"panel-body\\\">\\n            <form\\n              novalidate\\n              (ngSubmit)=\\\"processForm()\\\"\\n              #registerForm=\\\"ngForm\\\">\\n              \\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (emVar.touched || emVar.dirty) && !emVar.valid}\\\">\\n                <label for=\\\"email\\\">Email Address</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.email !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.email}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"email\\\"\\n                        id=\\\"email\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                      \\n                        placeholder=\\\"Email (Required)\\\"\\n                        [(ngModel)]=\\\"user.email\\\"\\n                        #emVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(emVar.touched || emVar.dirty) && emVar.errors\\\">\\n                          <span *ngIf=\\\"emVar.errors.required\\\">\\n                            A email address is required\\n                          </span>\\n                          \\n                          <span *ngIf=\\\"emVar.errors.pattern\\\">\\n                            Please enter a valid email address\\n                          </span>\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (disNameVar.touched || disNameVar.dirty) && !disNameVar.valid}\\\">\\n                <label for=\\\"disName\\\">Display Name</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.displayName !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.displayName}}\\n                </div>\\n                <input type=\\\"text\\\"\\n                        name=\\\"disName\\\"\\n                        id=\\\"disName\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Display Name (Required)\\\"\\n                        [(ngModel)]=\\\"user.displayName\\\"\\n                        #disNameVar=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(disNameVar.touched || disNameVar.dirty) && disNameVar.errors\\\">\\n                          A display name is required\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (pw1Var.touched || pw1Var.dirty) && !pw1Var.valid}\\\">\\n                <label for=\\\"password1\\\">Password</label>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errors.password !== null\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Error:</span>\\n                  {{errors.password}}\\n                </div>\\n                <input type=\\\"password\\\"\\n                        id=\\\"password1\\\"\\n                        name=\\\"password1\\\"\\n                        class=\\\"form-control\\\"\\n                        required\\n                        placeholder=\\\"Password (Required)\\\"\\n                        [(ngModel)]=\\\"user.password\\\"\\n                        #pw1Var=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"(pw1Var.touched || pw1Var.dirty) && pw1Var.errors\\\">\\n                          A password is required\\n                        </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div [ngClass]=\\\"{'has-error' : (pw2Var.touched || pw2Var.dirty) && !pw2Var.valid}\\\">\\n                <label for=\\\"confirm_password\\\">Confirm Password</label>\\n                <input type=\\\"password\\\"\\n                id=\\\"confirm_password\\\"\\n                name=\\\"confirm_password\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                placeholder=\\\"Confirm Password (Required)\\\"\\n                [(ngModel)]=\\\"user.confirm_password\\\"\\n                #pw2Var=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"(pw2Var.touched || pw2Var.dirty) && pw2Var.errors\\\">\\n                  Please confirm your password\\n                </span>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"user.password !== user.confirm_password\\\" class=\\\"alert alert-warning\\\">\\n                Passwords Do Not Match\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n              <span>\\n              <button type=\\\"submit\\\"\\n                     class=\\\"btn btn-success btn_narrow\\\"\\n                     [disabled]=\\\"!registerForm.valid\\\"\\n                     >Register</button> \\n               <button type=\\\"button\\\"\\n                     class=\\\"btn btn-default btn_narrow \\\"\\n                     (click)=\\\"cancel()\\\">Cancel</button>\\n              </span>\\n              </div>\\n\\n            </form>\\n          </div>\\n          <div class=\\\"panel-footer\\\">\\n            Register? <a [routerLink]=\\\"['']\\\" href=\\\"\\\">Login Here</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.html\n// module id = ../../../../../src/app/components/sign/sign.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Http, Response, Headers } from \"@angular/http\";\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\nexport class SignComponent implements OnInit {\n  user = {\n    email: '',\n    password : '',\n    confirm_password: '',\n    displayName : ''\n  };\n\n  errors = {\n    summary: null,\n    email : null,\n    displayName : null,\n    password: null\n  }\n\n  constructor(private router: Router, private http: Http) { }\n\n  processForm() {  \n        const email = this.user.email;\n        const password = this.user.password;\n        const confirm_password = this.user.confirm_password;\n        const displayName = this.user.displayName;\n    \n        \n\n        if(password !== confirm_password) {\n          return;\n        }\n\n        const headers = new Headers( {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        });\n        \n        return this.http.post('/auth/signup', {\n          email : email,\n          password : password,\n          displayName : displayName\n        }, {headers: headers}).toPromise()\n                              .then(response => {\n                                if (response.status === 200) {\n                                  console.log('Signup succeed.');\n                                  this.errors = {\n                                    summary: null,\n                                    email : null,\n                                    displayName : null,\n                                    password: null\n                                  }\n                                  this.router.navigate(['/login']);                                 \n                                } \n                              }).catch((error:any) => {\n                                console.log('Signup failed.');\n                                const json = error.json();\n                                this.errors = json.errors ? json.errors : {\n                                  summary: null,\n                                  email : null,\n                                  displayName : null,\n                                  password: null\n                                };\n                                this.errors.summary = json.message;                                \n                                console.log(error);\n                              });\n        }\n\n        \n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/components/sign/sign.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth : AuthService, public router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.auth.isUserAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n    \n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth-guard.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n  constructor() { }\n\n  public authenticateUser(token, email, displayName, role):void {\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n    localStorage.setItem('displayName', displayName);\n    localStorage.setItem('role', role);\n  }\n\n  public isUserAuthenticated(): boolean{\n    return localStorage.getItem('token') !== null;\n  }\n\n  public deauthenticateUser():void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('displayName');\n    localStorage.removeItem('role');\n  }\n\n  public getToken():String {\n    return localStorage.getItem('token'); \n  }\n\n  public getEmail():String {\n    return localStorage.getItem('email');\n  }\n\n  public getDisplayName():String {\n    return localStorage.getItem('displayName');\n  }\n\n  public getRole():String {\n    return localStorage.getItem('role');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Message } from '../models/message.model';\n\ndeclare var io : any;\n\nconst SERVER_URL = 'http://localhost:3000';\n\n@Injectable()\nexport class SocketService {\n  socket : any;\n  constructor() { }\n\n  public init(userName: String): void {\n    this.socket = io(SERVER_URL);\n    this.socket.emit('newUser', userName);\n    this.socket.on('hello', (hello) => {\n      console.log('hello recevied from server:' + hello);\n    });\n  }\n\n\n  public send(message: Message):void {\n    this.socket.emit('message', message);\n  }\n\n  public deleteUser(displayName: string): void {\n    this.socket.emit('deleteUser', displayName);\n  }\n\n\n  onUserslist(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('init', (usersList) => {\n        observer.next(usersList);\n      });\n    });\n  }\n\n\n  newUser(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('newUser', (name) => {\n        observer.next(name);\n      });\n    });\n  }\n\n  loseUser(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('loseUser', (name) => {\n        observer.next(name);\n      });\n    });\n  }\n\n  kickUser(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('deleteUser', (displayName) => {\n        observer.next(displayName);\n      });\n    });\n  }\n  \n  onMessage(): Observable<any> {\n    return new Observable(observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n  public onConnect(): Observable<any> {\n    return new Observable(observer => {\n        this.socket.on('connect', () => observer.next());\n    });\n}\n\n  public onDisconnect(): Observable<any> {\n    return new Observable(observer => {\n        this.socket.on('disconnect', () => \n        observer.next());\n    });\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/app/service/socket.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/wanlima/RealTime-Chat/RealTime-chat/RJ-client/src/main.ts"],"sourceRoot":"webpack:///"}